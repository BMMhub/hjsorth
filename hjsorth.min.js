var forth=function(){var glossary=[{name:"!",interpret:function(context){var address=context.stack.pop();var x=context.stack.pop();context.forth.heap[address]=x}},{name:"'",interpret:function(context){var name=context.readWordOrFail();var word=context.forth.dictionary.findOrFail(name);context.stack.push(word.interpret)},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var word=context.forth.dictionary.findOrFail(name);context.stack.push(word.interpret)})}},{name:"(",immediate:true,interpret:function(context){context.readUntil(")")}},{name:"*",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1*n2)}},{name:"*/",interpret:function(context){var n3=context.stack.pop();var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(Math.floor(n1*n2/n3))}},{name:"*/MOD",interpret:function(context){var n3=context.stack.pop();var n2=context.stack.pop();var n1=context.stack.pop();var d=n1*n2;context.stack.push(d%n3,Math.floor(d/n3))}},{name:"+",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1+n2)}},{name:"+!",interpret:function(context){var address=context.stack.pop();var n=context.stack.pop();context.forth.heap[address]+=n}},{name:"+LOOP",compile:function(context){var code=context.definitions.pop().code;if(--context.compile){context.definitions.peek().push(function(context){while(context.rstack.peek()<context.rstack.peekNext()){context.rstack.inc(context.stack.pop());context.executeTokens(code)}context.rstack.pop();context.rstack.pop()})}else{while(context.rstack.peek()<context.rstack.peekNext()){context.rstack.inc(context.stack.pop());context.executeTokens(code)}context.rstack.pop();context.rstack.pop()}}},{name:",",interpret:function(context){var x=context.stack.pop();context.forth.heap[context.forth.heapNext++]=x}},{name:"-",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1-n2)}},{name:".",interpret:function(context){context.forth.output(context.stack.pop().toString(context.base))}},{name:'."',interpret:function(context){context.forth.output(context.readUntil('"'))},compile:function(context){var s=context.readUntil('"');context.definitions.peek().code.push(function(context){context.forth.output(s)})}},{name:"/",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(Math.floor(n1/n2))}},{name:"/MOD",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1%n2,Math.floor(n1/n2))}},{name:"0<",interpret:function(context){context.stack.push(context.stack.pop()<0?1:0)}},{name:"0=",interpret:function(context){context.stack.push(context.stack.pop()==0?1:0)}},{name:"1+",interpret:function(context){context.stack.push(context.stack.pop()+1)}},{name:"1-",interpret:function(context){context.stack.push(context.stack.pop()-1)}},{name:"2!",interpret:function(context){var address=context.stack.pop();var x2=context.stack.pop();var x1=context.stack.pop();context.forth.heap[address]=x2;context.forth.heap[address+1]=x1}},{name:"2*",interpret:function(context){context.stack.push(context.stack.pop()*2)}},{name:"2/",interpret:function(context){context.stack.push(context.stack.pop()/2)}},{name:"2@",interpret:function(context){var address=context.stack.pop();context.stack.push(context.forth.heap[address+1],context.forth.heap[address])}},{name:"2DROP",interpret:function(context){context.stack.pop();context.stack.pop()}},{name:"2DUP",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1,x2,x1,x2)}},{name:"2OVER",interpret:function(context){var x4=context.stack.pop();var x3=context.stack.pop();var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1,x2,x3,x4,x1,x2)}},{name:"2SWAP",interpret:function(context){var x4=context.stack.pop();var x3=context.stack.pop();var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x3,x4,x1,x2)}},{name:":",interpret:function(context){var name=context.readWordOrFail();context.definitions.push({name:name,code:[]});++context.compile},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){context.definitions.push({name:name,code:[]});++context.compile})}},{name:";",compile:function(context){var word=context.definitions.pop();var code=word.code;var interpret=function(context){context.executeTokens(code)};--context.compile;if(word.name){word.interpret=interpret;context.forth.dictionary.push(word)}else if(context.compile){context.definitions.peek().code.push(function(context){context.stack.push(interpret)})}else{context.stack.push(interpret)}}},{name:"<",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1<n2?1:0)}},{name:"=",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1==n2?1:0)}},{name:">",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1>n2?1:0)}},{name:">BODY",interpret:function(context){var xt=context.stack.pop();if(typeof xt!=="function"){throw"not an execution token"}for(var i=0;i<context.forth.heap.length;++i){if(context.forth.heap[i]===xt){context.stack.push(i);return}}throw"not an execution token defined with CREATE"}},{name:">R",interpret:function(context){context.rstack.push(context.stack.pop())}},{name:"?DUP",interpret:function(context){var x=context.stack.peek();if(x!=0){context.stack.push(x)}}},{name:"@",interpret:function(context){var address=context.stack.pop();context.stack.push(context.forth.heap[address])}},{name:"ABS",interpret:function(context){context.stack.pushUnsigned(context.stack.pop())}},{name:"ALLOT",interpret:function(context){var n=context.stack.pop();if(n<0){n=-n;for(var i=0;i<n;++i){context.forth.heap.pop()}context.forth.heapNext-=n}else if(n>0){for(var i=0;i<n;++i){context.forth.heap.push(0)}context.forth.heapNext+=n}}},{name:"AND",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1&x2)}},{name:"BEGIN",immediate:true,interpret:function(context){context.definitions.push({code:[]});++context.compile}},{name:"BL",interpret:function(context){context.stack.push(32)}},{name:"C!",interpret:function(context){var address=context.stack.pop();var char=context.stack.pop();context.forth.heap[address]=String.fromCharCode(char)}},{name:"C,",interpret:function(context){var char=context.stack.pop();context.forth.heap.push(String.fromCharCode(char));++context.forth.heapNext}},{name:"C@",interpret:function(context){var address=context.stack.pop();context.stack.push(context.forth.heap[address].charCodeAt(0))}},{name:"CELL+",interpret:function(context){context.stack.push(context.stack.pop()+1)}},{name:"CELLS",interpret:function(context){}},{name:"CHAR",interpret:function(context){var name=context.readWordOrFail();context.stack.push(name.charCodeAt(0))},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){context.stack.push(name.charCodeAt(0))})}},{name:"CHAR+",interpret:function(context){context.stack.push(context.stack.pop()+1)}},{name:"CHARS",interpret:function(context){}},{name:"CONSTANT",interpret:function(context){var name=context.readWordOrFail();var x=context.stack.pop();context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(x)}})},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var x=context.stack.pop();context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(x)}})})}},{name:"COUNT",interpret:function(context){var address=context.stack.pop();context.stack.push(address+1,context.forth.heap[address])}},{name:"CR",interpret:function(context){context.forth.output("\n")}},{name:"CREATE",interpret:function(context){var name=context.readWordOrFail();var address=context.forth.heap.length-1;context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(address)}})},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var address=context.forth.heap.length-1;context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(address)}})})}},{name:"DECIMAL",interpret:function(context){context.base=10}},{name:"DEPTH",interpret:function(context){context.stack.push(context.stack.length)}},{name:"DO",immediate:true,interpret:function(context){if(context.compile++){context.definitions.peek().code.push(function(context){var x=context.stack.pop();var y=context.stack.pop();context.rstack.push(y,x)})}else{var x=context.stack.pop();var y=context.stack.pop();context.rstack.push(y,x)}context.definitions.push({code:[]})}},{name:"DROP",interpret:function(context){context.stack.pop()}},{name:"DUP",interpret:function(context){context.stack.push(context.stack.peek())}},{name:"ELSE",immediate:true,interpret:function(context){var code=context.definitions.pop().code;context.definitions.push({code:[]});if(context.compile>1){context.definitions.peekNext().code.push(function(context){if(context.stack.pop()!=0){context.executeTokens(code);context.stack.push(0)}else{context.stack.push(1)}})}else if(context.stack.pop()!=0){context.executeTokens(code);context.stack.push(0)}else{context.stack.push(1)}}},{name:"EMIT",interpret:function(context){context.forth.output(String.fromCharCode(context.stack.pop()))}},{name:"EXECUTE",interpret:function(context){context.stack.pop().interpret(context)}},{name:"FILL",interpret:function(context){var char=String.fromCharCode(context.stack.pop());var u=context.stack.popUnsigned();var address=context.stack.pop();for(var i=address;i<address+u;++i){context.forth.heap[i]=char}}},{name:"FIND",interpret:function(context){var address=context.stack.pop();var s=context.forth.heap.slice(address+1,address+1+context.forth.heap[address]).join("");var word=context.forth.dictionary.find(s);if(word){context.stack.push(word.interpret,word.immediate?1:-1)}else{context.stack.push(address,0)}}},{name:"FM/MOD",interpret:function(context){var n1=stack.context.pop();var d1=stack.context.pop();context.stack.push(d1%n1,Math.floor(d1/n1))}},{name:"HERE",interpret:function(context){context.stack.push(context.forth.heap.length)}},{name:"I",interpret:function(context){context.stack.push(context.rstack.peek())}},{name:"IF",immediate:true,interpret:function(context){context.definitions.push({code:[]});++context.compile}},{name:"IMMEDIATE",interpret:function(context){if(!("name"in context.forth.dictionary.tail)){throw"word does not have a name"}context.forth.dictionary.tail.immediate=true}},{name:"INVERT",interpret:function(context){context.stack.push(~context.stack.pop())}},{name:"J",interpret:function(context){context.stack.push(context.rstack.peekNext())}},{name:"LITERAL",compile:function(context){var x=context.stack.pop();context.definitions.peek().code.push(function(context){context.stack.push(x)})}},{name:"LOOP",immediate:true,interpret:function(context){var code=context.definitions.pop().code;if(--context.compile>0){context.definitions.peek().code.push(function(context){while(context.rstack.peek()<context.rstack.peekNext()){context.executeTokens(code);context.rstack.inc(1)}context.rstack.pop();context.rstack.pop()})}else{while(context.rstack.peek()<context.rstack.peekNext()){context.executeTokens(code);context.rstack.inc(1)}context.rstack.pop();context.rstack.pop()}}},{name:"LSHIFT",interpret:function(context){var u=context.stack.popUnsigned();var x1=context.stack.pop();context.stack.push(x1<<u)}},{name:"M*",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1*n2)}},{name:"MAX",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1>n2?n1:n2)}},{name:"MIN",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1<n2?n1:n2)}},{name:"MOD",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1%n2)}},{name:"MOVE",interpret:function(context){var u=context.stack.popUnsigned();var address2=context.stack.pop();var address1=context.stack.pop();for(var i=0;i<u;++i){context.forth.heap[address2+u]=context.forth.heap[address1+u]}}},{name:"NEGATE",interpret:function(context){context.stack.push(-context.stack.pop())}},{name:"OR",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();context.stack.push(n1|n2)}},{name:"OVER",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1,x2,x1)}},{name:"POSTPONE",compile:function(context){var name=context.readWordOrFail();var word=context.forth.dictionary.findOrFail(name);context.definitions.peek().code.push(word.compile?word.compile:word.interpret)}},{name:"QUIT",interpret:function(context){context.rstack.clear()}},{name:"R>",interpret:function(context){context.stack.push(context.rstack.pop())}},{name:"R@",interpret:function(context){context.stack.push(context.rstack.peek())}},{name:"RECURSE",compile:function(context){var data=context.definitions.peek();Array.prototype.push.apply(data,data)}},{name:"ROT",interpret:function(context){var x3=context.stack.pop();var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x2,x3,x1)}},{name:"RSHIFT",interpret:function(context){var u=context.stack.popUnsigned();var x1=context.stack.pop();context.stack.push(x1>>u)}},{name:'S"',interpret:function(context){var s=context.readUntil('"');context.stack.push(context.forth.heap.length,s.length);context.forth.heap.push(s.length);for(var i=0;i<s.length;++i){context.forth.heap.push(s[i])}},compile:function(context){var s=context.readUntil('"');context.definitions.peek().code.push(function(context){context.stack.push(context.forth.heap.length,s.length);context.forth.heap.push(s.length);for(var i=0;i<s.length;++i){context.forth.heap.push(s[i])}})}},{name:"S>D",interpret:function(context){}},{name:"SPACE",interpret:function(context){context.forth.output(" ")}},{name:"SPACES",interpret:function(context){var n=context.stack.pop();var result="";for(var i=0;i<n;++i){result+=" "}if(result.length>0){context.forth.output(result)}}},{name:"SWAP",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x2,x1)}},{name:"THEN",compile:function(context){var code=context.definitions.pop().code;if(--context.compile){context.definitions.peek().code.push(function(context){if(context.stack.pop()!=0){context.executeTokens(code)}})}else if(context.stack.pop()!=0){context.executeTokens(code)}}},{name:"TYPE",interpret:function(context){var u=context.stack.popUnsigned();var address=context.stack.pop();if(u>0){context.forth.output(context.forth.heap.slice(address+1,address+u+1).join(""))}}},{name:"U.",interpret:function(context){var u=context.stack.popUnsigned();context.forth.output(u.toString(context.base))}},{name:"U<",interpret:function(context){var u2=context.stack.popUnsigned();var u1=context.stack.popUnsigned();context.stack.push(u1<u2?1:0)}},{name:"UM*",interpret:function(context){var u2=context.stack.popUnsigned();var u1=context.stack.popUnsigned();context.stack.pushUnsigned(u1*u2)}},{name:"UM/MOD",interpret:function(context){var u1=context.stack.popUnsigned();var ud=context.stack.popUnsigned();context.stack.pushUnsigned(ud%u1,ud/u1)}},{name:"UNTIL",immediate:true,interpret:function(context){var code=context.definitions.pop().code;if(--context.compile>0){context.definitions.peek().code.push(function(context){do{context.executeTokens(code)}while(!context.stack.pop())})}else{do{context.executeTokens(code)}while(!context.stack.pop())}}},{name:"VARIABLE",interpret:function(context){var word=context.readWordOrFail();var address=context.forth.heap.length;context.forth.heap.push(0);context.stack.push(address)},compile:function(context){var word=context.readWordOrFail();context.definitions.peek().code.push(function(context){var address=context.forth.heap.length;context.forth.heap.push(0);context.stack.push(address)})}},{name:"XOR",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1^x2)}},{name:"[",immediate:true,interpret:function(context){--context.compile}},{name:"[']",compile:function(context){var name=context.readWordOrFail();var word=context.forth.dictionary.findOrFail(name);context.definitions.peek().code.push(function(context){context.stack.push(word.interpret)})}},{name:"[CHAR]",compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){context.stack.push(name.charCodeAt(0))})}},{name:"]",interpret:function(context){++context.compile}},{name:".(",immediate:true,interpret:function(context){context.forth.output(context.readUntil(")"))}},{name:".R",interpret:function(context){var n2=context.stack.pop();var n1=context.stack.pop();var s=n1.toString(context.base);if(s.length<n2){for(var i=0;i<s.length-n2;++i){s=" "+s}}context.forth.output(s)}},{name:"0<>",interpret:function(context){context.stack.push(context.stack.pop()!=0?1:0)}},{name:"0>",interpret:function(context){context.stack.push(context.stack.pop()>0?1:0)}},{name:"2>R",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.rstack.push(x1,x2)}},{name:"2R>",interpret:function(context){var x2=context.rstack.pop();var x1=context.rstack.pop();context.stack.push(x1,x2)}},{name:"2R@",interpret:function(context){var x2=context.rstack.pop();var x1=context.rstack.pop();context.stack.push(x1,x2);context.rstack.push(x1,x2)}},{name:":NONAME",interpret:function(context){context.definitions.push({code:[]});++context.compile}},{name:"<>",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x1!=x2?1:0)}},{name:"AGAIN",immediate:true,interpret:function(context){var code=context.definitions.pop().code;if(--context.compile>0){context.definitions.peek().code.push(function(context){while(true){context.executeTokens(code)}})}else{while(true){context.executeTokens(code)}}}},{name:'C"',interpret:function(context){var s=context.readUntil('"');var address=context.forth.heap.length;context.forth.heap.push(s.length);for(var i=0;i<s.length;++i){context.forth.heap.push(s[i])}context.stack.push(address)},compile:function(context){var s=context.readUntil('"');context.definitions.peek().code.push(function(context){var address=context.forth.heap.length;context.forth.heap.push(s.length);for(var i=0;i<s.length;++i){context.forth.heap.push(s[i])}context.stack.push(address)})}},{name:"COMPILE,",compile:function(context){context.definitions.peek().code.push(context.stack.pop())}},{name:"ERASE",interpret:function(context){var u=context.stack.popUnsigned();var address=context.stack.pop();for(var i=0;i<u;++i){context.forth.heap[address+u]=0}}},{name:"FALSE",interpret:function(context){context.stack.push(0)}},{name:"HEX",interpret:function(context){context.base=16}},{name:"NIP",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x2)}},{name:"PARSE",interpret:function(context){var char=String.fromCharCode(context.stack.pop());var s=context.readUntil(char);context.stack.push(context.forth.heap.length);context.forth.heap.push(s.length);for(var i=0;i<s.length;++i){context.forth.heap.push(s[i])}}},{name:"PICK",interpret:function(context){var u=context.stack.popUnsigned();context.stack.push(context.stack[context.length-u])}},{name:"TO",interpret:function(context){var name=context.readWordOrFail();var word=context.forth.dictionary.findOrFail(name);var x=context.stack.pop();if(!word||!word.value){throw"word not defined by VALUE"}word.interpret=function(context){context.stack.push(x)}},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var word=context.forth.dictionary.findOrFail(name);var x=context.stack.pop();if(!word||!word.value){throw"word not defined by VALUE"}word.interpret=function(context){context.stack.push(x)}})}},{name:"TRUE",interpret:function(context){context.stack.push(1)}},{name:"TUCK",interpret:function(context){var x2=context.stack.pop();var x1=context.stack.pop();context.stack.push(x2,x1,x2)}},{name:"U.R",interpret:function(context){var n=context.stack.pop();var u=context.stack.popUnsigned();var s=u.toString(context.base);if(s.length<n){for(var i=0;i<s.length-n;++i){s=" "+s}}context.forth.output(s)}},{name:"U>",interpret:function(context){var u2=context.stack.popUnsigned();var u1=context.stack.popUnsigned();context.stack.push(u1<u2?1:0)}},{name:"UNUSED",interpret:function(context){context.stack.push(0)}},{name:"VALUE",interpret:function(context){var name=context.readWordOrFail();var x=context.stack.pop();context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(x)}})},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var x=context.stack.pop();context.forth.dictionary.push({name:name,interpret:function(context){context.stack.push(x)}})})}},{name:"[COMPILE]",compile:function(context){var name=context.readWordOrFail();var word=context.forth.dictionary.findOrFail(name);context.definitions.peek().push(word.compile?word.compile:word.interpret)}},{name:"\\",immediate:true,interpret:function(context){while(context.offset<context.source.length){var c=context.source[context.offset++];if(c=="\n"||c=="\r"){return}}}},{name:'JS-STRING"',interpret:function(context){var s=context.readUntil('"');context.stack.push(s)},compile:function(context){var s=context.readUntil('"');context.definitions.peek().code.push(function(context){context.stack.push(s)})}},{name:"JS-VARIABLE",interpret:function(context){var name=context.readWordOrFail();context.stack.push(window[name])},compile:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){context.stack.push(window[name])})}},{name:"JS-PROPERTY@",interpret:function(context){var name=context.readWordOrFail();var x=context.stack.pop();context.stack.push(x[name])},compile:function(context){var name=context.readWordOrFail();var x=context.stack.pop();context.definitions.peek().code.push(function(context){context.stack.push(x[name])})}},{name:"JS-PROPERTY!",interpret:function(context){var name=context.readWordOrFail();var receiver=context.stack.pop();var value=context.stack.pop();receiver[name]=value},interpret:function(context){var name=context.readWordOrFail();context.definitions.peek().code.push(function(context){var receiver=context.stack.pop();var value=context.stack.pop();receiver[name]=value})}},{name:"JS-CALL",interpret:function(context){var func=context.stack.pop();var receiver=context.stack.pop();var n=context.stack.popUnsigned();var args=[];for(var i=0;i<n;++i){args.unshift(context.stack.pop())}context.stack.push(func.apply(receiver,args))}}];var Stack=function(){return this};Stack.prototype=Object.create(Array.prototype);Stack.prototype.peek=function(){if(this.length>0){return this[this.length-1]}};Stack.prototype.peekNext=function(){if(this.length>1){return this[this.length-2]}};Stack.prototype.pushUnsigned=function(){for(var i=0;i<arguments.length;++i){var value=arguments[i];this.push(value<0?-value:value)}};Stack.prototype.popUnsigned=function(){var value=this.pop();if(value<0){value=-value}return value};Stack.prototype.clear=function(){this.length=0};Stack.prototype.inc=function(n){this[this.length-1]+=n};var Dictionary=function(){this.words={};return this};Dictionary.prototype.find=function(name){return this.words[name]};Dictionary.prototype.findOrFail=function(name){var word=this.words[name];if(!word){throw"unrecognized word: "+name}return word};Dictionary.prototype.push=function(word){if(this.tail){this.tail.next=word;word.prev=this.tail}else{this.head=word}this.tail=word;if("name"in word){this.words[word.name]=word}};var Context=function(forth,source){this.forth=forth;this.source=source;this.offset=0;this.stack=new Stack;this.rstack=new Stack;this.definitions=new Stack;this.compile=0;this.base=10;return this};Context.prototype.readWord=function(){var begin=this.offset;var end=this.offset;while(this.offset<this.source.length){if(/\s/.test(this.source[this.offset++])){if(end-begin>0){return this.source.substring(begin,end)}begin=end=this.offset}else{++end}}if(end-begin>0){return this.source.substring(begin,end)}};Context.prototype.readWordOrFail=function(){var word=this.readWord();if(!word){throw"missing word"}return word};Context.prototype.readUntil=function(delimiter){var begin=this.offset;var end=this.offset;while(this.offset<this.source.length){if(this.source[this.offset++]===delimiter){if(end-begin>0){return this.source.substring(begin,end)}else{return""}}else{++end}}throw"syntax error: missing "+delimiter};Context.prototype.interpret=function(){while(this.offset<this.source.length){var name=this.readWord();var word;if(!name){return}if(word=this.forth.dictionary.find(name)){if(!this.compile||word.immediate){word.interpret(this)}else if(word.compile){word.compile(this)}else{this.definitions.peek().code.push(word.interpret)}}else if(/^\d+$/.test(name)){var number=parseInt(name,this.base);if(isNaN(number)){throw"unrecognized word: "+name}else if(this.compile){this.definitions.peek().code.push(number)}else{this.stack.push(number)}}else{if(isNaN(number)){throw"unrecognized word: "+name}}}};Context.prototype.executeTokens=function(tokens){for(var i=0,length=tokens.length;i<length;++i){var token=tokens[i];if(typeof token==="function"){token(this)}else{this.stack.push(token)}}};var Forth=function(){this.heap=[];this.heapNext=-1;this.dictionary=new Dictionary;for(var i=0,length=glossary.length;i<length;++i){this.dictionary.push(glossary[i])}return this};Forth.prototype.createContext=function(source){return new Context(this,source)};Forth.prototype.execute=function(source){this.createContext(source).interpret()};Forth.prototype.output=function(text){var lines=text.split(/\r?\n/);var currentLine=this.outputLine;for(var i=0;i<lines.length;++i){if(!currentLine){this.outputLine=currentLine=document.createElement("p");currentLine.setAttribute("class","forth-output");document.body.appendChild(currentLine)}currentLine.textContent+=lines[i]}if(/\r?\n$/.test(text)){this.outputLine=null}};Forth.prototype.eval=function(source){return this.createContext(source).interpret()};var interpreter=new Forth;window.addEventListener("load",function(){var load=function(url){var request;if(window.XMLHttpRequest){request=new XMLHttpRequest}else if(window.ActiveXObject){request=new ActiveXObject("Microsoft.XMLHTTP")}else{return""}request.open("GET",url,false);if(request.overrideMimeType){request.overrideMimeType("text/plain")}request.send(null);if(request.status==200){return request.responseText}else{return""}};var scripts=document.getElementsByTagName("script");for(var i=0;i<scripts.length;++i){var script=scripts[i];if(script.type=="application/forth"){interpreter.execute(script.src?load(script.src):script.innerHTML)}}});return interpreter}();